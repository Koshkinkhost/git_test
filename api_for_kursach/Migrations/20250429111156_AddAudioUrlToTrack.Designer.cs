// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_for_kursach.Models;

#nullable disable

namespace api_for_kursach.Migrations
{
    [DbContext(typeof(MusicLabelContext))]
    [Migration("20250429111156_AddAudioUrlToTrack")]
    partial class AddAudioUrlToTrack
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_for_kursach.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AlbumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("ArtistID");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AlbumId")
                        .HasName("PK__Albums__97B4BE17C423F503");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("api_for_kursach.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("StudioId")
                        .HasColumnType("int")
                        .HasColumnName("StudioID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ArtistId")
                        .HasName("PK__Artists__25706B7016EC7610");

                    b.HasIndex("StudioId");

                    b.HasIndex("UserId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("api_for_kursach.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("GenreId")
                        .HasName("PK__Genres__0385055EA1BB6626");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("api_for_kursach.Models.License", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LicenseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseId"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int")
                        .HasColumnName("PublisherID");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Territory")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("TrackID");

                    b.HasKey("LicenseId")
                        .HasName("PK__Licenses__72D600A252C7C1BC");

                    b.HasIndex("PublisherId");

                    b.HasIndex("TrackId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("api_for_kursach.Models.ListeningHistory", b =>
                {
                    b.Property<int>("ListeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ListeningID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListeningId"));

                    b.Property<DateTime>("PlayDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("TrackID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ListeningId")
                        .HasName("PK__Listenin__EA5EAC1E23199C55");

                    b.HasIndex("TrackId");

                    b.HasIndex("UserId");

                    b.ToTable("ListeningHistory", (string)null);
                });

            modelBuilder.Entity("api_for_kursach.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NewsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("ArtistID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NewsId")
                        .HasName("PK__News__954EBDD35A42F3FB");

                    b.HasIndex("AdminId");

                    b.HasIndex("ArtistId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("api_for_kursach.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PublisherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContractTerms")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PublisherId")
                        .HasName("PK__Publishe__4C657E4B81B19EB6");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("api_for_kursach.Models.RadioStation", b =>
                {
                    b.Property<int>("RadioStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RadioStationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RadioStationId"));

                    b.Property<string>("ContactInfo")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RadioStationId")
                        .HasName("PK__RadioSta__6B221770F9CF3D7E");

                    b.ToTable("RadioStations");
                });

            modelBuilder.Entity("api_for_kursach.Models.RotationApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("RadioStationId")
                        .HasColumnType("int")
                        .HasColumnName("RadioStationID");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("TrackID");

                    b.HasKey("ApplicationId")
                        .HasName("PK__Rotation__C93A4F796AC6D53A");

                    b.HasIndex("RadioStationId");

                    b.HasIndex("TrackId");

                    b.ToTable("RotationApplications");
                });

            modelBuilder.Entity("api_for_kursach.Models.Royalty", b =>
                {
                    b.Property<int>("RoyaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoyaltyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoyaltyId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("TrackID");

                    b.HasKey("RoyaltyId")
                        .HasName("PK__Royaltie__C48847EF08613365");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TrackId");

                    b.ToTable("Royalties");
                });

            modelBuilder.Entity("api_for_kursach.Models.Studio", b =>
                {
                    b.Property<int>("StudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudioId"));

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FoundedYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(10, 7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StudioId")
                        .HasName("PK__Studios__4ACC3B507D530DD3");

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("api_for_kursach.Models.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TrackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrackId"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("AlbumID");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("ArtistID");

                    b.Property<string>("AudioUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("GenreID");

                    b.Property<int>("PlaysCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("TrackId")
                        .HasName("PK__Tracks__7A74F8C0D03036D5");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("api_for_kursach.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACFE4BC87D");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4661EB418")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api_for_kursach.Models.Album", b =>
                {
                    b.HasOne("api_for_kursach.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK__Albums__ArtistID__4222D4EF");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("api_for_kursach.Models.Artist", b =>
                {
                    b.HasOne("api_for_kursach.Models.Studio", "Studio")
                        .WithMany("Artists")
                        .HasForeignKey("StudioId")
                        .HasConstraintName("FK_Artists_Studios");

                    b.HasOne("api_for_kursach.Models.User", "User")
                        .WithMany("Artists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Artists__UserID__3D5E1FD2");

                    b.Navigation("Studio");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api_for_kursach.Models.License", b =>
                {
                    b.HasOne("api_for_kursach.Models.Publisher", "Publisher")
                        .WithMany("Licenses")
                        .HasForeignKey("PublisherId")
                        .IsRequired()
                        .HasConstraintName("FK__Licenses__Publis__4F7CD00D");

                    b.HasOne("api_for_kursach.Models.Track", "Track")
                        .WithMany("Licenses")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__Licenses__TrackI__4E88ABD4");

                    b.Navigation("Publisher");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("api_for_kursach.Models.ListeningHistory", b =>
                {
                    b.HasOne("api_for_kursach.Models.Track", "Track")
                        .WithMany("ListeningHistories")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__Listening__Track__4BAC3F29");

                    b.HasOne("api_for_kursach.Models.User", "User")
                        .WithMany("ListeningHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Listening__UserI__4AB81AF0");

                    b.Navigation("Track");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api_for_kursach.Models.News", b =>
                {
                    b.HasOne("api_for_kursach.Models.User", "Admin")
                        .WithMany("News")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__News__AdminID__71D1E811");

                    b.HasOne("api_for_kursach.Models.Artist", "Artist")
                        .WithMany("News")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("FK__News__ArtistID__70DDC3D8");

                    b.Navigation("Admin");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("api_for_kursach.Models.RotationApplication", b =>
                {
                    b.HasOne("api_for_kursach.Models.RadioStation", "RadioStation")
                        .WithMany("RotationApplications")
                        .HasForeignKey("RadioStationId")
                        .IsRequired()
                        .HasConstraintName("FK__RotationA__Radio__59FA5E80");

                    b.HasOne("api_for_kursach.Models.Track", "Track")
                        .WithMany("RotationApplications")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__RotationA__Track__59063A47");

                    b.Navigation("RadioStation");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("api_for_kursach.Models.Royalty", b =>
                {
                    b.HasOne("api_for_kursach.Models.Artist", "Author")
                        .WithMany("Royalties")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__Royalties__Autho__534D60F1");

                    b.HasOne("api_for_kursach.Models.Track", "Track")
                        .WithMany("Royalties")
                        .HasForeignKey("TrackId")
                        .IsRequired()
                        .HasConstraintName("FK__Royalties__Track__52593CB8");

                    b.Navigation("Author");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("api_for_kursach.Models.Track", b =>
                {
                    b.HasOne("api_for_kursach.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("FK__Tracks__AlbumID__46E78A0C");

                    b.HasOne("api_for_kursach.Models.Artist", "Artist")
                        .WithMany("Tracks")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK__Tracks__ArtistID__45F365D3");

                    b.HasOne("api_for_kursach.Models.Genre", "Genre")
                        .WithMany("Tracks")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK__Tracks__GenreID__47DBAE45");

                    b.Navigation("Album");

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("api_for_kursach.Models.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("api_for_kursach.Models.Artist", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("News");

                    b.Navigation("Royalties");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("api_for_kursach.Models.Genre", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("api_for_kursach.Models.Publisher", b =>
                {
                    b.Navigation("Licenses");
                });

            modelBuilder.Entity("api_for_kursach.Models.RadioStation", b =>
                {
                    b.Navigation("RotationApplications");
                });

            modelBuilder.Entity("api_for_kursach.Models.Studio", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("api_for_kursach.Models.Track", b =>
                {
                    b.Navigation("Licenses");

                    b.Navigation("ListeningHistories");

                    b.Navigation("RotationApplications");

                    b.Navigation("Royalties");
                });

            modelBuilder.Entity("api_for_kursach.Models.User", b =>
                {
                    b.Navigation("Artists");

                    b.Navigation("ListeningHistories");

                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
